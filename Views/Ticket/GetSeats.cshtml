@model BookingFilm.LichChieu


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <link href="~/CSS/Ticket.css" rel="stylesheet" />
    <title>Movie Ticket Booking Website</title>
</head>
<body data-MaLC="@Model.MaLC">
    <div class="book">
        <div class="left">
            <div class="play">
                <a href="/home" style="color: white;">
                    <i class="bi bi-house-fill" id="play"></i>
                </a>
            </div>
            <img src="@Model.Phim.HinhPhim" alt="" id="poster" />

            <div class="cont">
                <h6>Directed by</h6>
                <p>@Model.Phim.DaoDien</p>
                <h6>Category</h6>
                <p>
                    @Model.Phim.TheLoai
                </p>
                <h6>Year Of Manufacture</h6>
                <p>	@Model.Phim.NamSanXuat</p>
                <h6>Describe</h6>
                <p>	@Model.Phim.MoTa</p>
            </div>
        </div>
        <div class="right">

            <div class="head_time">
                <h1 id="title">@Model.Phim.TenPhim</h1>
                <div class="time">
                    <h6><i class="bi bi-clock"></i> @Model.Phim.ThoiLuong minutes</h6>
                    <button>PG-13</button>
                </div>
            </div>

            <div class="screen" id="screen">
                Screen
            </div>
            <div class="chair" id="chair">
                @foreach (var hang in Model.PhongChieu.Ghes.GroupBy(ghe => ghe.TenGhe.Substring(0, 1)))
                {
                    <div class="cinema-row">
                        @foreach (var ghe in hang.OrderBy(ghe => ghe.TenGhe))
                        {
                            if (ghe.TinhTrangGhe == false)
                            {
                                <li class="seat" data-id="@ghe.MaGhe" data-booked="false">
                                    @ghe.TenGhe
                                </li>
                            }
                            else
                            {
                                <li class="seat" style="background: #fd6565 !important;" data-booked="true" disabled>
                                    @ghe.TenGhe
                                </li>
                            }
                        }
                    </div>
                }
            </div>

            <div class="details" id="det">
                <div class="details_chair">
                    <li>Avalable</li>
                    <li>Booked</li>
                    <li>Selected</li>
                </div>
            </div>
            <a href="/Ticket/CreateTicket">
                <button class="book_tic" id="book_ticket">
                    <i class="bi bi-arrow-right-short"></i>
                </button>
            </a>

            <footer>
                <p class="footer-text">© 2024 LeeWinHS, By H-Fing</p>
            </footer>
        </div>
    </div>

    <script src="~/JS/Ticket.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jsbarcode/3.11.5/JsBarcode.all.js" integrity="sha512-wkHtSbhQMx77jh9oKL0AlLBd15fOMoJUowEpAzmSG5q5Pg9oF+XoMLCitFmi7AOhIVhR6T6BsaHJr6ChuXaM/Q==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script>
        JsBarcode("#barcode", "J18800792023");

    </script>
</body>
</html>


<script>
    document.addEventListener('DOMContentLoaded', (event) => {
        var selectedSeats = [];
        var MaLC = document.body.getAttribute("data-MaLC");

        var seats = document.querySelectorAll(".seat");
        seats.forEach(function (seat) {
            seat.addEventListener("click", function () {
                // If the seat is already booked, return immediately
                if (this.getAttribute("data-booked") === "true") {
                    return;
                }

                var seatId = this.getAttribute("data-id");
                if (this.classList.contains("selected")) {
                    this.classList.remove("selected");
                    var index = selectedSeats.indexOf(seatId);
                    if (index > -1) {
                        selectedSeats.splice(index, 1);
                    }
                } else {
                    this.classList.add("selected");
                    selectedSeats.push(seatId);
                }
                updateButtonDisplay();
            });
        });

        function updateButtonDisplay() {
            var bookButton = document.getElementById("book_ticket");
            if (selectedSeats.length > 0) {
                bookButton.style.display = "unset";
                bookButton.onclick = function (e) {
                    e.preventDefault();
                    var body = "MaLC=" + MaLC;
                    selectedSeats.forEach((seat, index) => {
                        body += `&selectedSeats[${index}]=${encodeURIComponent(seat)}`;
                    });

                    fetch("/Ticket/SaveSelectedSeats", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/x-www-form-urlencoded"
                        },
                        body: body
                    })
                        .then(response => {
                            if (response.ok) {
                                window.location.href = "/Ticket/CreateTicket";
                            } else {
                                // Handle error here
                            }
                        });
                }
            } else {
                bookButton.style.display = "none";
            }
        }
        // Call updateButtonDisplay at the start to ensure buttons are in correct state
        updateButtonDisplay();
    });
</script>
<style>
    .cinema-row {
        display: flex;
        justify-content: center;
        margin-bottom: 15px;
    }

    .seat {
        margin-right: 10px;
        position: relative;
        width: 40px;
        height: 35px;
        background: rgb(184, 184, 184, .3);
        list-style: none;
        border-radius: 5px;
        cursor: pointer;
        transition: .3s linear;
        font-size: 14px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #fff;
        font-weight: 600;
    }

        .seat:hover {
            background: greenyellow;
            color: #000;
        }

    footer {
        position: fixed;
        width: 100%;
        bottom: 0;
        text-align: center;
    }

    .footer-text {
        display: flex;
        color: white;
        font-size: 10px;
    }
</style>
